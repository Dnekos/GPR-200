/*
	Copyright 2020 Demetrius J Nekos

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
		http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    
    // texture space = (0,1]
    // if texture = 100x100, resInv = 0.01,0.01
    vec2 inverseReso = 1.0 / iChannelResolution[0].xy;
    
    //for gaussian
    
    float invKernalSum = 0.125; // 1/8, 8 being the sum of the kernal
    vec4 kernel = vec4(invKernalSum, invKernalSum * 3.0, invKernalSum * 3.0, invKernalSum);
	
	vec4[4] pixelsy = vec4[4]( getPixel(fragCoord.x,fragCoord.y - 1.0, inverseReso, iChannel0),
                getPixel(fragCoord.x,fragCoord.y, inverseReso, iChannel0),
                getPixel(fragCoord.x,fragCoord.y + 1.0, inverseReso, iChannel0),
                getPixel(fragCoord.x,fragCoord.y + 2.0, inverseReso, iChannel0)
                );
    
	color4 blur = pixelsy[0] * kernel[0]+
        pixelsy[1] * kernel[1]+
        pixelsy[2] * kernel[2]+
        pixelsy[3] * kernel[3];

	
    //Edge detect
    /*
	// kernal taken from https://docs.gimp.org/2.8/en/plug-in-convmatrix.html
	// only 1 of the middle cells (in C and D) are negative so that the end result is as well
    vec3 kernel = vec3(1.0,2.0,1.0);
	
	vec4[3] pixelsy = vec4[3]( getPixel(fragCoord.x,fragCoord.y - 0.5, inverseReso, iChannel1),
                getPixel(fragCoord.x,fragCoord.y + 0.5, inverseReso, iChannel1),
                getPixel(fragCoord.x,fragCoord.y + 1.5, inverseReso, iChannel1)
                );
    color4 blur = pixelsy[0] * kernel[0]+
        pixelsy[1] * kernel[1]+
        pixelsy[2] * kernel[2];
	*/
    

    fragColor = blur;
}